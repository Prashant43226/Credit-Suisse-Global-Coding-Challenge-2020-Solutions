#include<bits/stdc++.h>
using namespace std;
string find_min_days(long long profit[], long long price[],long long n1,long long d)
{
	//Participants code will be here
	map<long long,vector<long long>>mp1;
	long long n=n1;
	long long m=d;
	long long sum1[n];
	string s;
	vector<string>v1;
	if(n==0||m==0)
	return "";

	else
	{
	for(long long j=0;j<n;++j)
	{
		mp1[price[j]].push_back(j);
	}
	for(long long i=0;i<m;++i)
	{
	long long min=INT_MAX;
	long long start=0;
	long long end=0;
	for(long long j=0;j<n;++j)
	{
	sum1[j]=price[j]+profit[i];
	}
int flag=0;
	for(long long j=0;j<n;++j)
	{
	if(mp1.find(sum1[j])!=mp1.end())
		{
			flag=1;
			for(auto v:mp1[sum1[j]])
			{
				if(start==0 && end==0)
				{
				if(v>j)
				{
					if(v-j<min)
					{start=j;
					end=v;
					min=v-j;
					}
				}
				}
				else if(j<end)
				{
                if(v>j)
				{
					if(v-j<min)
					{start=j;
					end=v;
					min=v-j;
					}
				}
				}
			}
			if(start!=end)
			{flag=1;
			s=to_string(start+1)+" "+to_string(end+1);
			}
			else
			flag=0;
		}
	}

	if(flag==0)
	{
		s=to_string(-1);
	}
		v1.push_back(s);
	}
	string s1="";
    for(long long i=0;i<v1.size();++i)
    {
    	if(i!=v1.size()-1)
    	s1+=v1[i]+",";
    	else
    	s1+=v1[i];
    }
    return s1;
}
}

int main ()
{
	long long n,d,i;
	string answer="";
	cin>>n>>d;
	long long price[n];
	long long profit[d];
	for (i=0;i<n;i++)
		cin>>price[i];
	for (i=0;i<d;i++)
	    cin>>profit[i];
    answer = find_min_days(profit,price,n,d);

    // Do not remove below line
	cout<<answer<<endl;
    // Do not print anything after this line

	return 0;
}