#include <bits/stdc++.h>

using namespace std;

int findMaxProfit(int numOfPredictedDays, vector<int> predictedSharePrices) {
    int n=numOfPredictedDays;
    vector<int> min_so_far;
    vector<int> max_so_far;
    int min=predictedSharePrices[0];
    int min1;
    int max=predictedSharePrices[n-1];
    int max1;
    min_so_far.push_back(min);
    max_so_far.push_back(max);
    
    for(int i=1;i<n;++i)
    {
        if(predictedSharePrices[i]<min)
        {
            min=predictedSharePrices[i];
            min_so_far.push_back(min);
        }
        else
        min_so_far.push_back(min);
    }
    
    for(int i=n-2;i>=0;--i)
    {
        if(predictedSharePrices[i]>max)
        {
            max=predictedSharePrices[i];
            max_so_far.push_back(max);
        }
        else
        max_so_far.push_back(max);
    }
    reverse(max_so_far.begin(),max_so_far.end());
    max1=max_so_far[0]-min_so_far[0];
    for(int i=1;i<n;++i)
    {
    	if(max_so_far[i]-min_so_far[i]>max1)
    	{
    		max1=max_so_far[i]-min_so_far[i];
    	}
    }
    return max1;
}

vector<int> splitStringToInt(const string& str, char delim) {
    vector<int> strings;
    size_t start;
    size_t end = 0;
    while ((start = str.find_first_not_of(delim, end)) != string::npos) {
        end = str.find(delim, start);
        strings.push_back(stoi(str.substr(start, end - start)));
    }
    return strings;
}

void printVector(vector<int> vec) {
    for (vector<int>::const_iterator i = vec.begin(); i != vec.end(); ++i) {
        cout << *i << ' ';
    }
    cout << endl;
}

int main() {
    string firstLine;
    getline(cin, firstLine);

    vector<int> firstLineVec = splitStringToInt(firstLine, ' ');
    int numOfPredictedDays = firstLineVec[0];
    vector<int> predictedSharePrices(firstLineVec.begin()+1, firstLineVec.end());


    int result = findMaxProfit(numOfPredictedDays, predictedSharePrices);

    // Do not remove this line
    cout << result << "\n";
    // Do not print anything after this line

    return 0;
}